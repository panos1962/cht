#!/usr/bin/env awk

###############################################################################@
#
# Copyright (C) 2019 Panos I. Papadopoulos <panos1962_AT_gmail_DOT_com>
#
###############################################################################@
#
# Το παρόν χρησιμοποιείται ως πρώτο βήμα όλων των προγραμμάτων διαχείρισης
# δεδομένων οχημάτων/κατόχων, που έχουν παραληφθεί από την πλατφόρμα "govHUB"
# μέσω του προγράμματος "GH/carget" και έχουν επιπεδοποιθεί από τον jq parser.
# Ο jq parser ο οποίος επιτελεί το πρώτο πέρασμα στα JSON data εκτυπώνει
# δύο στήλες: το όνομα του πεδίου και την τιμή.
#
###############################################################################@

BEGIN {
	# Οι δύο (2) στήλες που τυπώνει ο jq parser είναι χωρισμένες μεταξύ
	# τους με tabs.

	FS = "\t"
}

# Οι γραμμές που παράγονται από τον jq parser αποτελούνται από δύο (2) στήλες
# χωρισμένες μεταξύ τους με tab. Οποιαδήποτε γραμμή δεν έχει ακριβώς 2 στήλες
# υποκρύπτει κάποιο πρόβλημα και ως εκ τούτου το πρόγραμμα μας ενημερώνει.
# Παρ' όλα αυτά, η γραμμή συνεχίζει την πορεία της σε τυχόν παρεπόμενο
# processing.

NF != 2 {
	pd_errmsg($0 ": invalid columns' count")
	next
}
	
# Κάτι που γίνεται ούτως ή άλλως είναι το trimming των κενών από το τέλος
# κάθε γραμμής. πράγματι, σε πολλά από τα δεδομένα που παραλαμβάνουμε από
# την πλατφόρμα "govHUB" εμπεριέχουν αλφαριθμητικές τιμές με κενά στο τέλος,
# π.χ. συναντάμε αριθμό οδού "34      " κοκ.

{
	sub(/ *$/, "")
}
